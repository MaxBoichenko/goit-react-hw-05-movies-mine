{"version":3,"file":"static/js/884.4d35cb8c.chunk.js","mappings":"gNAqEA,UA9DqB,WAAO,IAAD,IACzB,GAA0BA,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAQ7C,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBP,GACbQ,KAAKT,GACLU,OAAM,SAAAC,GAAE,OAAIC,QAAQC,IAAIF,EAAhB,GACZ,GAAE,CAACV,IAECA,GAAYF,GAKf,iCACE,mBAAQe,KAAK,SAAb,UACE,SAAC,KAAD,CAAMC,GAAIZ,EAAV,wBAGF,gCACE,0BACE,gBACEa,IAAG,yCAAoCjB,EAAMkB,aAC7CC,IAAG,UAAKnB,EAAMoB,YAGlB,4BACE,wBAAKpB,EAAMoB,SACX,wCAAgBC,KAAKC,MAA2B,GAArBtB,EAAMuB,cAAjC,SACA,sCACA,uBAAIvB,EAAMwB,YACV,oCACA,uBAAIxB,EAAMyB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,cAInD,gCACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMb,GAAG,OAAOV,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMY,GAAG,UAAUV,MAAO,CAAEC,KAAMH,GAAlC,8BAMN,SAAC,EAAA0B,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,SA1CG,IA8CV,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { Outlet } from 'react-router-dom';\nimport { getMovieDetails } from '../API/Api';\n\nimport { useParams, Link, useLocation } from 'react-router-dom';\n\nimport { useState, useEffect, Suspense } from 'react';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState();\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then(setMovie)\n      .catch(er => console.log(er));\n  }, [movieId]);\n\n  if (!movieId || !movie) {\n    return null;\n  }\n\n  return (\n    <>\n      <button type=\"button\">\n        <Link to={backLinkHref}>Go back</Link>\n      </button>\n\n      <section>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n            alt={`${movie.title}`}\n          />\n        </div>\n        <div>\n          <h1>{movie.title}</h1>\n          <p>User Score: {Math.round(movie.vote_average * 10)} %</p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n        </div>\n      </section>\n\n      <section>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </section>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","movie","setMovie","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","getMovieDetails","then","catch","er","console","log","type","to","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}